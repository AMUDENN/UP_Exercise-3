using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UP_Exercise_3
{
    class Definitions
    {
        public static void Set_Definitions(MainWindow mwindow)
        {
            mwindow.contains_text.Text = "Возвращает значение, указывающее, встречается ли указанная подстрока или символ внутри этой строки.";
            mwindow.concat_text.Text = "Возвращает строку - результат объединения одного или нескольких экземпляров класса String.";
            mwindow.endswith_text.Text = "Возвращает значение, указывающее, совпадает ли конец данного экземпляра строки с указанной строкой.";
            mwindow.index_text.Text = "IndexOf возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода или строки в пределах данного экземпляра." +
                "\nLastIndexOf возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода или строки в пределах данного экземпляра. " +
                "\nМетоды возвращают -1, если знак или строка не найдена в данном экземпляре.";
            mwindow.insert_text.Text = "Возвращает новую строку, в которой указанная строка вставляется в указанной позиции индекса в данном экземпляре.";
            mwindow.join_text.Text = "Сцепляет элементы указанного массива или элементы коллекции, помещая между ними заданный разделитель.";
            mwindow.replace_text.Text = "Возвращает новую строку, в которой все вхождения заданной строки в текущем экземпляре заменены другой заданной строкой.";
            mwindow.split_text.Text = "Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданной строки или массива знаков Юникода.";
            mwindow.substring_text.Text = "Substring(Int32) Возвращает подстроку из данного экземпляра.Подстрока начинается в указанном положении символов и продолжается до конца строки." +
                "\nSubstring(Int32, Int32) возвращает подстроку из данного экземпляра.Подстрока начинается с указанной позиции знака и имеет указанную длину.";
            mwindow.toul_text.Text = "ToUpper() возвращает копию этой строки, переведенную в верхний регистр. \nToLower() возвращает копию этой строки, переведенную в нижний регистр.";
            mwindow.trim_text.Text = "Возвращает новую строку, в которой удалены все начальные и конечные вхождения заданного набора символов из текущей строки.";
        }
    }
}
